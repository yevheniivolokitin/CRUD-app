{"ast":null,"code":"var _jsxFileName = \"/Users/jenya/Documents/visualcode/text/my-app/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { getTodos, deleteTodo, update } from \"./api/todo\";\nimport normilizeTodos from \"./utils/normilize-todos\";\nimport Todo from \"./components/Todo\";\nimport { updateTodos } from \"./api/todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //  const mockTodos = [\n  //     { id: \"1\", title: \"Needed text\", completed: \"true\" },\n  //     { id: \"2\", title: \"Needed \", completed: \"true\" },\n  //     { id: \"3\", title: \"Text \", completed: \"true\" },\n  //  ];\n  const [todosIds, setTodosIds] = useState(null);\n  const [todosByIds, setTodosByIds] = useState({});\n  const [isLoadingTodos, setLoadingTodos] = useState(false);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    setIsError(false);\n    setLoadingTodos(true);\n    getTodos().then(todos => {\n      const [ids, byIds] = normilizeTodos(todos);\n      setLoadingTodos(false);\n      setTodosIds(ids);\n      setTodosByIds(byIds);\n    }).catch(todos => {\n      setIsError(true);\n      setLoadingTodos(false);\n    });\n  }, []);\n  function handleDeleteTodo(id) {\n    console.log(id);\n    setTodosIds(todosIds.filter(todosIds => todosIds !== id));\n    deleteTodo(id);\n  }\n  function handleToggle(id) {\n    setTodosByIds({\n      ...todosByIds,\n      [id]: {\n        ...todosByIds[id],\n        completed: !todosByIds[id].completed\n      }\n    });\n    updateTodos(id, todosByIds);\n    console.log();\n    document.write(\"Вывод информации\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Have are problem in server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this), isLoadingTodos && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Download all todos list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }, this), todosIds && todosIds.map(id => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todosByIds[id],\n      onDeleteBtnClick: () => handleDeleteTodo(id),\n      onToggle: () => handleToggle(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"PnJvEXLIZc0+D8s2DqI1CdKiYA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","React","getTodos","deleteTodo","update","normilizeTodos","Todo","updateTodos","jsxDEV","_jsxDEV","App","_s","todosIds","setTodosIds","todosByIds","setTodosByIds","isLoadingTodos","setLoadingTodos","isError","setIsError","then","todos","ids","byIds","catch","handleDeleteTodo","id","console","log","filter","handleToggle","completed","document","write","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","onDeleteBtnClick","onToggle","_c","$RefreshReg$"],"sources":["/Users/jenya/Documents/visualcode/text/my-app/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { getTodos, deleteTodo, update } from \"./api/todo\";\nimport normilizeTodos from \"./utils/normilize-todos\";\nimport Todo from \"./components/Todo\";\nimport { updateTodos } from \"./api/todo\";\n\nfunction App() {\n   //  const mockTodos = [\n   //     { id: \"1\", title: \"Needed text\", completed: \"true\" },\n   //     { id: \"2\", title: \"Needed \", completed: \"true\" },\n   //     { id: \"3\", title: \"Text \", completed: \"true\" },\n   //  ];\n   const [todosIds, setTodosIds] = useState(null);\n   const [todosByIds, setTodosByIds] = useState({});\n   const [isLoadingTodos, setLoadingTodos] = useState(false);\n   const [isError, setIsError] = useState(false);\n   useEffect(() => {\n      setIsError(false);\n      setLoadingTodos(true);\n      getTodos()\n         .then((todos) => {\n            const [ids, byIds] = normilizeTodos(todos);\n            setLoadingTodos(false);\n            setTodosIds(ids);\n            setTodosByIds(byIds);\n         })\n         .catch((todos) => {\n            setIsError(true);\n            setLoadingTodos(false);\n         });\n   }, []);\n   function handleDeleteTodo(id) {\n      console.log(id);\n      setTodosIds(todosIds.filter((todosIds) => todosIds !== id));\n      deleteTodo(id);\n   }\n   function handleToggle(id) {\n      setTodosByIds({\n         ...todosByIds,\n         [id]: {\n            ...todosByIds[id],\n            completed: !todosByIds[id].completed,\n         },\n      });\n      updateTodos(id, todosByIds);\n      console.log();\n      document.write(\"Вывод информации\");\n   }\n   return (\n      <div>\n         {isError && <p>Have are problem in server</p>}\n         {isLoadingTodos && <p>Download all todos list</p>}\n         <h1>Todos list</h1>\n         {todosIds &&\n            todosIds.map((id) => (\n               <Todo\n                  todo={todosByIds[id]}\n                  onDeleteBtnClick={() => handleDeleteTodo(id)}\n                  onToggle={() => handleToggle(id)}\n               />\n            ))}\n      </div>\n   );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}