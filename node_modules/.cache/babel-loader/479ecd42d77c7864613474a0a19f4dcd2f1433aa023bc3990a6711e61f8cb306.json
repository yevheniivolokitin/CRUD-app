{"ast":null,"code":"const BASE_URL = \"https://jsonplaceholder.typicode.com\";\nexport async function getTodos() {\n  const response = await fetch(`${BASE_URL}/todos`);\n  if (!response.ok) {\n    throw new Error(\"Api response fail\");\n  }\n  return await response.json();\n}\nexport function deleteTodo(id) {\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\"\n  });\n}\nexport function updateTodos(id, todo) {\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      id: id,\n      title: todo.title,\n      completed: todo.completed\n    })\n  });\n}\nexport async function addTodo(todo) {\n  const response = await fetch(`${BASE_URL}/todos`, {\n    method: \"POST\",\n    body: JSON.stringify(todo),\n    headers: {\n      \"Content-type\": \"application-json;charset=UTF-8\"\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Api response fail\");\n  }\n  return await response.json();\n}","map":{"version":3,"names":["BASE_URL","getTodos","response","fetch","ok","Error","json","deleteTodo","id","method","updateTodos","todo","body","JSON","stringify","title","completed","addTodo","headers"],"sources":["/Users/jenya/Documents/visualcode/text/my-app/src/api/todo.js"],"sourcesContent":["const BASE_URL = \"https://jsonplaceholder.typicode.com\";\nexport async function getTodos() {\n   const response = await fetch(`${BASE_URL}/todos`);\n   if (!response.ok) {\n      throw new Error(\"Api response fail\");\n   }\n   return await response.json();\n}\n\nexport function deleteTodo(id) {\n   return fetch(`${BASE_URL}/posts/${id}`, { method: \"DELETE\" });\n}\nexport function updateTodos(id, todo) {\n   return fetch(`${BASE_URL}/posts/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n         id: id,\n         title: todo.title,\n         completed: todo.completed,\n      }),\n   });\n}\nexport async function addTodo(todo) {\n   const response = await fetch(`${BASE_URL}/todos`, {\n      method: \"POST\",\n      body: JSON.stringify(todo),\n      headers: { \"Content-type\": \"application-json;charset=UTF-8\" },\n   });\n   if (!response.ok) {\n      throw new Error(\"Api response fail\");\n   }\n   return await response.json();\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,sCAAsC;AACvD,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,QAAO,CAAC;EACjD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACf,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACvC;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC/B;AAEA,OAAO,SAASC,UAAUA,CAACC,EAAE,EAAE;EAC5B,OAAOL,KAAK,CAAE,GAAEH,QAAS,UAASQ,EAAG,EAAC,EAAE;IAAEC,MAAM,EAAE;EAAS,CAAC,CAAC;AAChE;AACA,OAAO,SAASC,WAAWA,CAACF,EAAE,EAAEG,IAAI,EAAE;EACnC,OAAOR,KAAK,CAAE,GAAEH,QAAS,UAASQ,EAAG,EAAC,EAAE;IACrCC,MAAM,EAAE,KAAK;IACbG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAClBN,EAAE,EAAEA,EAAE;MACNO,KAAK,EAAEJ,IAAI,CAACI,KAAK;MACjBC,SAAS,EAAEL,IAAI,CAACK;IACnB,CAAC;EACJ,CAAC,CAAC;AACL;AACA,OAAO,eAAeC,OAAOA,CAACN,IAAI,EAAE;EACjC,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,QAAO,EAAE;IAC/CS,MAAM,EAAE,MAAM;IACdG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAC1BO,OAAO,EAAE;MAAE,cAAc,EAAE;IAAiC;EAC/D,CAAC,CAAC;EACF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;IACf,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACvC;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}